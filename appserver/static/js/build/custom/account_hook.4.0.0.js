var e={d:(t,r)=>{for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};function r(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}e.d(t,{Z:()=>i});const i=function(){function e(t,r,n,o,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.globalConfig=t,this.serviceName=r,this.state=n,this.mode=o,this.util=i}var t,i;return t=e,(i=[{key:"onCreate",value:function(){}},{key:"onRender",value:function(){}},{key:"onSave",value:function(e){var t=e.name,o=e.auth_type,i=e.url;if(null===t||0===t.trim().length){var a="Field account name is required";return this.util.setErrorMsg(a),!1}return null===i||0===i.trim().length?(a="Field URL is required",this.util.setErrorMsg(a),!1):0!==i.indexOf("https://")?(a="URL should start with 'https://' as only secure URLs are supported.",this.util.setErrorMsg(a),!1):("oauth"==o&&(i=i.replace("https://",""),this.util.setState((function(e){var t=function(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}({},e.data);return t.endpoint.value=i,{data:t}}))),!0)}},{key:"onSaveSuccess",value:function(){}},{key:"onSaveFail",value:function(){}},{key:"onEditLoad",value:function(){}}])&&o(t.prototype,i),e}();var a=t.Z;export{a as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TcGx1bmtfVEFfc25vdy93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9TcGx1bmtfVEFfc25vdy93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vU3BsdW5rX1RBX3Nub3cvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9TcGx1bmtfVEFfc25vdy8uL3VjY191aV9leHRlbnNpb25zL2FjY291bnRfaG9vay40LjAuMC5qcyJdLCJuYW1lcyI6WyJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiZXhwb3J0cyIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0Iiwib2JqIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInRoaXMiLCJhY2NvdW50bmFtZSIsImRhdGFEaWN0IiwiYXV0aF90eXBlIiwiZW5kcG9pbnQiLCJtc2ciLCJkYXRhIiwicHJldlN0YXRlIl0sIm1hcHBpbmdzIjoiQUFDQSxJQUFJQSxFQUFzQixDQ0ExQixFQUF3QixDQUFDQyxFQUFTQyxLQUNqQyxJQUFJLElBQUlDLEtBQU9ELEVBQ1hGLEVBQW9CSSxFQUFFRixFQUFZQyxLQUFTSCxFQUFvQkksRUFBRUgsRUFBU0UsSUFDNUVFLE9BQU9DLGVBQWVMLEVBQVNFLEVBQUssQ0FBRUksWUFBWSxFQUFNQyxJQUFLTixFQUFXQyxNQ0ozRSxFQUF3QixDQUFDTSxFQUFLQyxJQUFVTCxPQUFPTSxVQUFVQyxlQUFlQyxLQUFLSixFQUFLQyxJLGtoQkNxRmxGLFEsV0E5REUsdUIsNEZBQTBELFNBQ3hESSxLQUFBLGVBQ0FBLEtBQUEsY0FDQUEsS0FBQSxRQUNBQSxLQUFBLE9BQ0FBLEtBQUEsTyw2Q0FLRixjLHNCQUtBLGMsb0JBTUEsWUFDRSxJQUFJQyxFQUFjQyxFQUFsQixLQUNJQyxFQUFZRCxFQUFoQixVQUNJRSxFQUFXRixFQUFmLElBQ0EsR0FBSUQsVUFBSixJQUE0QkEsZ0JBQWlDLENBQzNELElBQUlJLEVBQUosaUNBRUEsT0FEQUwsS0FBQSxxQkFDQSxFQUNLLE9BQUlJLFVBQUosSUFBeUJBLGlCQUMxQkMsRUFBSix3QkFDQUwsS0FBQSxxQkFDQSxHQUNLLElBQUlJLHVCQUNMQyxFQUFKLHNFQUVBTCxLQUFBLHFCQUNBLElBQ0ssU0FBSUcsSUFDVEMsRUFBV0EscUJBRG9CLElBRS9CSixLQUFBLGVBQW1CLFlBQ2pCLElBQUlNLEUsK1ZBQU8sQ0FBSCxHQUFRQyxFQUFoQixNQUVBLE9BREFELG1CQUNPLENBQUVBLGFBR2IsSywyQkFLRixjLHdCQUlBLGMsd0JBSUEsaUIiLCJmaWxlIjoiYWNjb3VudF9ob29rLjQuMC4wLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhlIHJlcXVpcmUgc2NvcGVcbnZhciBfX3dlYnBhY2tfcmVxdWlyZV9fID0ge307XG5cbiIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCIvKipcbiAqXG4gKiBTUERYLUZpbGVDb3B5cmlnaHRUZXh0OiAyMDIxIFNwbHVuaywgSW5jLiA8c2FsZXNAc3BsdW5rLmNvbT5cbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBMaWNlbnNlUmVmLVNwbHVuay0xLTIwMjBcbiAqXG4gKi9cblxuY2xhc3MgQWNjb3VudEhvb2sge1xuICAvKipcbiAgICogRm9ybSBob29rXG4gICAqIEBjb25zdHJ1Y3RvclxuICAgKiBAcGFyYW0ge09iamVjdH0gZ2xvYmFsQ29uZmlnIC0gR2xvYmFsIGNvbmZpZ3VyYXRpb24uXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBzZXJ2aWNlTmFtZSAtIFNlcnZpY2UgbmFtZVxuICAgKiBAcGFyYW0ge29iamVjdH0gc3RhdGUgLSBJbml0aWFsIHN0YXRlIG9mIHRoZSBmb3JtXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBtb2RlIC0gRm9ybSBtb2RlLiBDYW4gYmUgZWRpdCwgY3JlYXRlIG9yIGNsb25lXG4gICAqIEBwYXJhbSB7b2JqZWN0fSB1dGlsIC0gT2JqZWN0IGNvbnRhaW5pbmcgdXRpbGl0eSBtZXRob2RzXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0U3RhdGUsXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRFcnJvck1zZyxcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgIHNldEVycm9yRmllbGRNc2csXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICBjbGVhckFsbEVycm9yTXNnXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgKi9cbiAgY29uc3RydWN0b3IoZ2xvYmFsQ29uZmlnLCBzZXJ2aWNlTmFtZSwgc3RhdGUsIG1vZGUsIHV0aWwpIHtcbiAgICB0aGlzLmdsb2JhbENvbmZpZyA9IGdsb2JhbENvbmZpZztcbiAgICB0aGlzLnNlcnZpY2VOYW1lID0gc2VydmljZU5hbWU7XG4gICAgdGhpcy5zdGF0ZSA9IHN0YXRlO1xuICAgIHRoaXMubW9kZSA9IG1vZGU7XG4gICAgdGhpcy51dGlsID0gdXRpbDtcbiAgfVxuICAvKlxuICAgIFB1dCBsb2dpYyBoZXJlIHRvIGV4ZWN1dGUgamF2YXNjcmlwdCBvbiBDcmVhdGUgVUkuXG4gICovXG4gIG9uQ3JlYXRlKCkge31cblxuICAvKlxuICAgIFB1dCBsb2dpYyBoZXJlIHRvIGV4ZWN1dGUgamF2YXNjcmlwdCB3aGVuIFVJIGdldHMgcmVuZGVyZWQuXG4gICovXG4gIG9uUmVuZGVyKCkge31cbiAgLyogXG4gICAgUHV0IGZvcm0gdmFsaWRhdGlvbiBsb2dpYyBoZXJlLlxuICAgIFJldHVybiB0dXJlIGlmIHZhbGlkYXRpb24gcGFzcywgZmFsc2Ugb3RoZXJ3aXNlLlxuICAgIENhbGwgZGlzcGxheUVycm9yTXNnIHdoZW4gdmFsaWR0aW9uIGZhaWxlZC5cbiAgKi9cbiAgb25TYXZlKGRhdGFEaWN0KSB7XG4gICAgdmFyIGFjY291bnRuYW1lID0gZGF0YURpY3QubmFtZTtcbiAgICB2YXIgYXV0aF90eXBlID0gZGF0YURpY3QuYXV0aF90eXBlO1xuICAgIHZhciBlbmRwb2ludCA9IGRhdGFEaWN0LnVybDtcbiAgICBpZiAoYWNjb3VudG5hbWUgPT09IG51bGwgfHwgYWNjb3VudG5hbWUudHJpbSgpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgdmFyIG1zZyA9IFwiRmllbGQgYWNjb3VudCBuYW1lIGlzIHJlcXVpcmVkXCI7XG4gICAgICB0aGlzLnV0aWwuc2V0RXJyb3JNc2cobXNnKTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9IGVsc2UgaWYgKGVuZHBvaW50ID09PSBudWxsIHx8IGVuZHBvaW50LnRyaW0oKS5sZW5ndGggPT09IDApIHtcbiAgICAgIHZhciBtc2cgPSBcIkZpZWxkIFVSTCBpcyByZXF1aXJlZFwiO1xuICAgICAgdGhpcy51dGlsLnNldEVycm9yTXNnKG1zZyk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSBlbHNlIGlmIChlbmRwb2ludC5pbmRleE9mKFwiaHR0cHM6Ly9cIikgIT09IDApIHtcbiAgICAgIHZhciBtc2cgPVxuICAgICAgICBcIlVSTCBzaG91bGQgc3RhcnQgd2l0aCAnaHR0cHM6Ly8nIGFzIG9ubHkgc2VjdXJlIFVSTHMgYXJlIHN1cHBvcnRlZC5cIjtcbiAgICAgIHRoaXMudXRpbC5zZXRFcnJvck1zZyhtc2cpO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gZWxzZSBpZiAoYXV0aF90eXBlID09IFwib2F1dGhcIikge1xuICAgICAgZW5kcG9pbnQgPSBlbmRwb2ludC5yZXBsYWNlKFwiaHR0cHM6Ly9cIiwgXCJcIik7IC8vcmVtb3ZpbmcgdGhlIGh0dHBzIHNjaGVtYSBmcm9tIHRoZSBlbmRwb2ludFxuICAgICAgdGhpcy51dGlsLnNldFN0YXRlKChwcmV2U3RhdGUpID0+IHtcbiAgICAgICAgbGV0IGRhdGEgPSB7IC4uLnByZXZTdGF0ZS5kYXRhIH07XG4gICAgICAgIGRhdGEuZW5kcG9pbnQudmFsdWUgPSBlbmRwb2ludDtcbiAgICAgICAgcmV0dXJuIHsgZGF0YSB9O1xuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIC8qXG4gICAgUHV0IGxvZ2ljIGhlcmUgdG8gZXhlY3V0ZSBqYXZhc2NyaXB0IHRvIGJlIGNhbGxlZCBhZnRlciBzYXZlIHN1Y2Nlc3MuXG4gICovXG4gIG9uU2F2ZVN1Y2Nlc3MoKSB7fVxuICAvKlxuICAgIFB1dCBsb2dpYyBoZXJlIHRvIGV4ZWN1dGUgamF2YXNjcmlwdCB0byBiZSBjYWxsZWQgb24gc2F2ZSBmYWlsZWQuXG4gICovXG4gIG9uU2F2ZUZhaWwoKSB7fVxuICAvKlxuICAgIFB1dCBsb2dpYyBoZXJlIHRvIGV4ZWN1dGUgamF2YXNjcmlwdCBhZnRlciBsb2FkaW5nIGVkaXQgVUkuXG4gICovXG4gIG9uRWRpdExvYWQoKSB7fVxufVxuXG5leHBvcnQgZGVmYXVsdCBBY2NvdW50SG9vaztcbiJdLCJzb3VyY2VSb290IjoiIn0=